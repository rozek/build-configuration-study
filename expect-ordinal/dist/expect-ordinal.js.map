{"version":3,"file":"expect-ordinal.js","sources":["../src/expect-ordinal.ts"],"sourcesContent":["/**** expectOrdinal ****/\n\n  import throwError from 'throw-error'\n\n  function expectOrdinal (Description:string, Argument:any):void {\n    if (Argument == null) throwError(\n      'MissingArgument: no \"' + Description + '\" given'\n    )\n\n    if ((typeof Argument !== 'number') && ! (Argument instanceof Number)) throwError(\n      'InvalidArgument: the given \"' + Description + '\" is not a number'\n    )\n\n    Argument = Argument.valueOf()\n    if (\n      isFinite(Argument) &&\n      (Math.round(Argument) === Argument) && (Argument >= 0)\n    ) { return }\n\n    throwError(\n      'InvalidArgument: the given \"' + Description + '\" is not an ordinal number'\n    )\n  }\n\n  export default expectOrdinal\n\n"],"names":["throwError"],"mappings":";;;;;;;;;;;;;;IAAA;IAIE,SAAS,aAAa,CAAE,WAAkB,EAAE,QAAY;QACtD,IAAI,QAAQ,IAAI,IAAI;YAAEA,8BAAU,CAC9B,uBAAuB,GAAG,WAAW,GAAG,SAAS,CAClD,CAAA;QAED,IAAI,CAAC,OAAO,QAAQ,KAAK,QAAQ,KAAK,EAAG,QAAQ,YAAY,MAAM,CAAC;YAAEA,8BAAU,CAC9E,8BAA8B,GAAG,WAAW,GAAG,mBAAmB,CACnE,CAAA;QAED,QAAQ,GAAG,QAAQ,CAAC,OAAO,EAAE,CAAA;QAC7B,IACE,QAAQ,CAAC,QAAQ,CAAC;aACjB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,QAAQ,CAAC,KAAK,QAAQ,IAAI,CAAC,CAAC,EACtD;YAAE,OAAM;SAAE;QAEZA,8BAAU,CACR,8BAA8B,GAAG,WAAW,GAAG,4BAA4B,CAC5E,CAAA;IACH;;;;;;;;"}